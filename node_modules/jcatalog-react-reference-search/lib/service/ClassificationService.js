'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _superagentBluebirdPromise = require('superagent-bluebird-promise');

var _superagentBluebirdPromise2 = _interopRequireDefault(_superagentBluebirdPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ClassificationService = function () {
  function ClassificationService(classificationServiceUrl) {
    _classCallCheck(this, ClassificationService);

    this._classificationServiceRestApiUrl = classificationServiceUrl + '/api';
  }

  _createClass(ClassificationService, [{
    key: 'getClassifications',
    value: function getClassifications() {
      var url = this._classificationServiceRestApiUrl;
      url += '/classifications';
      return _superagentBluebirdPromise2.default.get(url).set('Accept', 'application/json');
    }
  }, {
    key: 'getClassification',
    value: function getClassification(classificationId) {
      var url = this._classificationServiceRestApiUrl;
      url += '/classifications/' + encodeURIComponent(classificationId);
      return _superagentBluebirdPromise2.default.get(url).set('Accept', 'application/json');
    }
  }, {
    key: 'getClassificationGroup',
    value: function getClassificationGroup(classificationId, classificationGroupId) {
      var url = this._classificationServiceRestApiUrl;
      url += '/classifications/' + encodeURIComponent(classificationId);
      url += '/groups/' + encodeURIComponent(classificationGroupId);
      return _superagentBluebirdPromise2.default.get(url).set('Accept', 'application/json');
    }
  }, {
    key: 'getClassificationGroups',
    value: function getClassificationGroups(classificationId, params) {
      var url = this._classificationServiceRestApiUrl;
      url += '/classifications/' + encodeURIComponent(classificationId) + '/groups';
      if (Object.keys(params).length) {
        url += '?';
        var uriEncodedParams = '';
        for (var key in params) {
          if (params.hasOwnProperty(key)) {
            uriEncodedParams += '&' + key + '=' + encodeURIComponent(params[key]);
          }
        }
        url += uriEncodedParams.substring(1);
      } else {
        url += '?parentClassificationGroupId=null';
      }
      return _superagentBluebirdPromise2.default.get(url).set('Accept', 'application/json');
    }
  }, {
    key: 'getClassificationGroupAttributeIds',
    value: function getClassificationGroupAttributeIds(classificationId, classificationGroupId) {
      var url = this._classificationServiceRestApiUrl;
      url += '/classifications/' + encodeURIComponent(classificationId);
      url += '/groups/' + encodeURIComponent(classificationGroupId) + '/attributes';
      return _superagentBluebirdPromise2.default.get(url).set('Accept', 'application/json');
    }
  }]);

  return ClassificationService;
}();

exports.default = ClassificationService;