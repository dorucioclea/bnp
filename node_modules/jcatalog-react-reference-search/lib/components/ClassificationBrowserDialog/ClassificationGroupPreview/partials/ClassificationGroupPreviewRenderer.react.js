'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _ClassificationGroupPreviewHeader = require('./ClassificationGroupPreviewHeader.react');

var _ClassificationGroupPreviewHeader2 = _interopRequireDefault(_ClassificationGroupPreviewHeader);

var _PreviewTabs = require('./PreviewTabs.react');

var _PreviewTabs2 = _interopRequireDefault(_PreviewTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassificationGroupPreviewRenderer = (_temp = _class = function (_React$Component) {
  _inherits(ClassificationGroupPreviewRenderer, _React$Component);

  function ClassificationGroupPreviewRenderer() {
    _classCallCheck(this, ClassificationGroupPreviewRenderer);

    return _possibleConstructorReturn(this, (ClassificationGroupPreviewRenderer.__proto__ || Object.getPrototypeOf(ClassificationGroupPreviewRenderer)).apply(this, arguments));
  }

  _createClass(ClassificationGroupPreviewRenderer, [{
    key: 'render',
    value: function render() {
      if (_lodash2.default.isNil(this.props.classificationGroup) || _lodash2.default.isNil(this.props.status) || _lodash2.default.isNil(this.props.attributes) || _lodash2.default.isNil(this.props.classificationGroup)) {
        return null;
      }

      return _react2.default.createElement(
        'div',
        { className: 'classification-browser__col-right' },
        _react2.default.createElement(
          'div',
          { className: 'classification-browser__preview-renderer' },
          _react2.default.createElement(
            'div',
            { className: 'classification-browser__header-container-flexfix' },
            _react2.default.createElement(_ClassificationGroupPreviewHeader2.default, {
              classificationGroup: this.props.classificationGroup,
              status: this.props.status
            })
          ),
          _react2.default.createElement(_PreviewTabs2.default, {
            attributes: this.props.attributes,
            subClassificationGroups: this.props.subClassificationGroups
          })
        )
      );
    }
  }]);

  return ClassificationGroupPreviewRenderer;
}(_react2.default.Component), _class.propTypes = {
  status: _react2.default.PropTypes.object,
  attributes: _react2.default.PropTypes.array,
  subClassificationGroups: _react2.default.PropTypes.array,
  classificationGroup: _react2.default.PropTypes.object
}, _class.defaultProps = {
  previewData: null,
  classificationGroup: null
}, _temp);
exports.default = ClassificationGroupPreviewRenderer;