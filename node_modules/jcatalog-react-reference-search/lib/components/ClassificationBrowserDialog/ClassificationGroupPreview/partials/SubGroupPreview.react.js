'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

require('./SubGroupPreview.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SubGroupPreview = (_temp = _class = function (_React$Component) {
  _inherits(SubGroupPreview, _React$Component);

  function SubGroupPreview() {
    _classCallCheck(this, SubGroupPreview);

    return _possibleConstructorReturn(this, (SubGroupPreview.__proto__ || Object.getPrototypeOf(SubGroupPreview)).apply(this, arguments));
  }

  _createClass(SubGroupPreview, [{
    key: 'getImageUrl',
    value: function getImageUrl() {
      if (_lodash2.default.isEmpty(this.props.classificationGroup._documentUrl1)) {
        return require('./noImage.png');
      } else {
        return this.props.classificationGroup._documentUrl1;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'sub-group-preview' },
        _react2.default.createElement(
          'div',
          { className: 'sub-group-preview__image-container' },
          _react2.default.createElement('img', { className: 'sub-group-preview__image', src: this.getImageUrl() })
        ),
        _react2.default.createElement(
          'div',
          { className: 'sub-group-preview__label', title: this.props.classificationGroup._objectLabel },
          this.props.classificationGroup._objectLabel
        )
      );
    }
  }]);

  return SubGroupPreview;
}(_react2.default.Component), _class.propTypes = {
  classificationGroup: _react2.default.PropTypes.object.isRequired
}, _temp);
exports.default = SubGroupPreview;