'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./ClassificationGroupPreviewHeader.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassificationGroupPreviewHeader = (_temp = _class = function (_React$Component) {
  _inherits(ClassificationGroupPreviewHeader, _React$Component);

  function ClassificationGroupPreviewHeader() {
    _classCallCheck(this, ClassificationGroupPreviewHeader);

    return _possibleConstructorReturn(this, (ClassificationGroupPreviewHeader.__proto__ || Object.getPrototypeOf(ClassificationGroupPreviewHeader)).apply(this, arguments));
  }

  _createClass(ClassificationGroupPreviewHeader, [{
    key: 'renderImageContainer',
    value: function renderImageContainer() {
      if (!this.props.classificationGroup._documentUrl1) {
        return null;
      }

      return _react2.default.createElement(
        'div',
        { className: 'classification-group-preview-header__image-container' },
        _react2.default.createElement(
          'div',
          { className: 'classification-group-preview-header__thumb-outer' },
          _react2.default.createElement('img', { className: 'classification-group-preview-header__thumb-image',
            src: this.props.classificationGroup._documentUrl1 || ''
          })
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var container1 = this.renderImageContainer();

      return _react2.default.createElement(
        'div',
        { className: 'classification-group-preview-header' },
        container1,
        _react2.default.createElement(
          'div',
          { className: 'classification-group-preview-header__labels-container' },
          _react2.default.createElement(
            'h4',
            { className: 'classification-group-preview-header__group-name' },
            this.props.classificationGroup.descShort
          ),
          _react2.default.createElement(
            'span',
            { className: 'classification-group-preview-header__label' },
            this.props.classificationGroup.classificationGroupId
          ),
          _react2.default.createElement(
            'span',
            { className: 'classification-group-preview-header__label' },
            _react2.default.createElement(
              'span',
              null,
              _react2.default.createElement(
                'span',
                null,
                this.context.i18n.getMessage('classificationGroupPreview.status'),
                ': '
              ),
              _react2.default.createElement(
                'b',
                null,
                this.props.status._objectLabel
              )
            )
          )
        )
      );
    }
  }]);

  return ClassificationGroupPreviewHeader;
}(_react2.default.Component), _class.propTypes = {
  classificationGroup: _react.PropTypes.object,
  status: _react.PropTypes.object
}, _class.contextTypes = {
  i18n: _react2.default.PropTypes.object.isRequired
}, _temp);
exports.default = ClassificationGroupPreviewHeader;