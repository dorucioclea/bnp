'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _superagentBluebirdPromise = require('superagent-bluebird-promise');

var _superagentBluebirdPromise2 = _interopRequireDefault(_superagentBluebirdPromise);

var _querystring = require('querystring');

var _querystring2 = _interopRequireDefault(_querystring);

var _i18n = require('./i18n');

var _i18n2 = _interopRequireDefault(_i18n);

var _ReferenceSearchDialog = require('../ReferenceSearchDialog');

var _ReferenceSearchDialog2 = _interopRequireDefault(_ReferenceSearchDialog);

var _termDialogFieldHelpers = require('./utils/termDialogFieldHelpers');

var _ServiceRegistryValidator = require('../ServiceRegistryValidator');

var _ServiceRegistryValidator2 = _interopRequireDefault(_ServiceRegistryValidator);

var _referenceInputUtils = require('../../utils/referenceInputUtils.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SERVICE_NAME = 'term';

/**
 * Provides possibility to search through the terms in popup/modal dialog.
 *
 * @author Eugene Viktarovich
 */
var TermReferenceSearchDialog = (_temp = _class = function (_Component) {
  _inherits(TermReferenceSearchDialog, _Component);

  function TermReferenceSearchDialog(props, context) {
    _classCallCheck(this, TermReferenceSearchDialog);

    var _this = _possibleConstructorReturn(this, (TermReferenceSearchDialog.__proto__ || Object.getPrototypeOf(TermReferenceSearchDialog)).call(this, props, context));

    _this.referenceSearchAction = function (searchParams, callback) {
      var serviceUrl = _this.props.serviceRegistry(SERVICE_NAME).url;
      var queryParams = _querystring2.default.stringify(searchParams);
      return _superagentBluebirdPromise2.default.get(serviceUrl + '/api/terms?' + queryParams).set('Accept', 'application/json').then(function (response) {
        return callback({
          count: (0, _referenceInputUtils.getTotalCount)(response),
          items: response.body
        });
      });
    };

    _this.context.i18n.register('TermReferenceSearchDialog', _i18n2.default);
    return _this;
  }

  _createClass(TermReferenceSearchDialog, [{
    key: 'render',
    value: function render() {
      var i18n = this.context.i18n;


      var valueProperty = 'id';
      var searchFields = (0, _termDialogFieldHelpers.getSearchFields)(i18n);
      var resultFields = (0, _termDialogFieldHelpers.getResultFields)(i18n);

      return _react2.default.createElement(_ReferenceSearchDialog2.default, {
        title: i18n.getMessage('TermReferenceSearchDialog.dialogTitle'),
        openDialog: this.props.openDialog,
        multiple: this.props.multiple,
        searchFields: searchFields,
        resultFields: resultFields,
        referenceSearchAction: this.referenceSearchAction,
        onCloseDialog: this.props.onCloseDialog,
        onSelect: this.props.onSelect,
        objectIdentifier: valueProperty
      });
    }
  }]);

  return TermReferenceSearchDialog;
}(_react.Component), _class.propTypes = {
  serviceRegistry: (0, _ServiceRegistryValidator2.default)(SERVICE_NAME),
  openDialog: _react.PropTypes.bool.isRequired,
  multiple: _react.PropTypes.bool,
  onSelect: _react.PropTypes.func.isRequired,
  onCloseDialog: _react.PropTypes.func.isRequired
}, _class.contextTypes = {
  i18n: _react.PropTypes.object.isRequired
}, _class.defaultProps = {
  multiple: false
}, _temp);
exports.default = TermReferenceSearchDialog;