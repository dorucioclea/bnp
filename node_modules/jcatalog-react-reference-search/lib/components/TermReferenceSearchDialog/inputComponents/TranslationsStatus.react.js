'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * InputComponent for status field of term translations.
 *
 * @author Eugene Viktarovich
 */
var TranslationsStatus = (_temp = _class = function (_Component) {
  _inherits(TranslationsStatus, _Component);

  function TranslationsStatus() {
    _classCallCheck(this, TranslationsStatus);

    return _possibleConstructorReturn(this, (TranslationsStatus.__proto__ || Object.getPrototypeOf(TranslationsStatus)).apply(this, arguments));
  }

  _createClass(TranslationsStatus, [{
    key: 'focus',
    value: function focus() {
      var element = this.refs['translationStatuses'];
      if (element) {
        setTimeout(function () {
          return element.focus();
        }, 300);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var i18n = this.context.i18n;
      var _props = this.props,
          value = _props.value,
          onChange = _props.onChange,
          id = _props.id;


      return _react2.default.createElement(
        'select',
        { className: 'form-control', onChange: onChange, value: value, id: id, ref: 'translationStatuses' },
        _react2.default.createElement('option', { value: '' }),
        _react2.default.createElement(
          'option',
          { value: 'new' },
          i18n.getMessage('TermReferenceSearchDialog.state.new')
        ),
        _react2.default.createElement(
          'option',
          { value: 'translationInProgress' },
          i18n.getMessage('TermReferenceSearchDialog.state.translationInProgress')
        ),
        _react2.default.createElement(
          'option',
          { value: 'approvalRequired' },
          i18n.getMessage('TermReferenceSearchDialog.state.approvalRequired')
        ),
        _react2.default.createElement(
          'option',
          { value: '2dApprovalRequired' },
          i18n.getMessage('TermReferenceSearchDialog.state._2dApprovalRequired')
        ),
        _react2.default.createElement(
          'option',
          { value: 'ok' },
          i18n.getMessage('TermReferenceSearchDialog.state.ok')
        )
      );
    }
  }]);

  return TranslationsStatus;
}(_react.Component), _class.propTypes = {
  onChange: _react.PropTypes.func.isRequired,
  value: _react.PropTypes.string,
  id: _react.PropTypes.string.isRequired
}, _class.contextTypes = {
  i18n: _react.PropTypes.object.isRequired
}, _class.defaultProps = {
  value: ''
}, _temp);
exports.default = TranslationsStatus;