version: '2'
services:
  bnp:
    build: .
    #restart: on-failure:5
    depends_on:  # as of version 1.9.0 Dockerfile's HEALTHCHECK is not supported yet.
     - mysql
     - supplier
    volumes:
     - .:/home/node/bnp
    labels:
      SERVICE_NAME: 'bnp'
    environment:
      HOST: $HOST
      PORT: '3000'
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    ports:
      - "3000:3000"
    extra_hosts:
     - 'consul:${HOST}'
#    logging:
#      driver: gelf
#      options:
#        gelf-address: 'udp://${LOG_HOST}:12201'

  supplier:
    image: opuscapita/supplier:dev
#    build: ../supplier
    #restart: on-failure:5
    depends_on:  # as of version 1.9.0 Dockerfile's HEALTHCHECK is not supported yet.
     - mysql
    labels:
      SERVICE_NAME: 'supplier'  # Service name used by Registrator for adding to Consul's service discovery registry.
      SERVICE_TAGS: 'external'
    ports:
      - "3001:3001"
    environment:
      PORT: '3001'
      HOST_IP: $HOST
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    extra_hosts:
      - 'consul:${HOST}'
    command: 'npm run dev'

  postgres:
    image: postgres:9.4
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: $POSTGRES_DB
      POSTGRES_DB: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    depends_on:
      - registrator

  apigw:
    image: ocbesbn/api-gw:latest
    environment:
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: $KONG_PG_HOST
      KONG_PG_PORT: $KONG_PG_PORT
      APP_HOST: $HOST
      APP_HOST_PROTOCOL: $APP_HOST_PROTOCOL
      APP_HOST_PORT: $APP_HOST_PORT
      GATEWAY_SCHEME: $GATEWAY_SCHEME
      GATEWAY_IP: $GATEWAY_IP
      GATEWAY_PORT: $GATEWAY_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      LOG_PORT: 5000
      LOG_HOST: $LOG_HOST
      HOST: $HOST
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
      REDIS_AUTH: $REDIS_AUTH
    ports:
      - "8080:8080"
      - "8443:8443"
      - "8001:8001"
      - "7946:7946"
      - "7946:7946/udp"
    depends_on:
      - postgres

  idpro:
    image: ocbesbn/idpro:dev
    ports:
     - "$APP_HOST_PORT:$APP_HOST_PORT"
    environment:
      NODE_ENV: $NODE_ENV
      MYSQL_PORT: $MYSQL_PORT
      MYSQL_DIALECT: 'mysql'
      MYSQL_SERVICE_NAME: $MYSQL_HOST
      APP_HOST: '0.0.0.0'
      APP_HOST_PROTOCOL: $APP_HOST_PROTOCOL
      APP_HOST_PORT: $APP_HOST_PORT
      GATEWAY_SCHEME: $GATEWAY_SCHEME
      GATEWAY_IP: $GATEWAY_IP
      GATEWAY_PORT: $GATEWAY_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
      MYSQL_HOST: $MYSQL_HOST
      CONSUL_HOST: $CONSUL_HOST
    depends_on:
      - apigw

  api-registry:
    image: ocbesbn/api-registrator:latest
    ports:
      - "$API_REGISTRY_PORT:$API_REGISTRY_PORT"
    environment:
      CONSUL_HOST: $HOST
      AUTH_SERVER: $AUTH_SERVER
      AUTH_SERVER_PORT: $AUTH_SERVER_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
      KONG_HOST: $KONG_HOST
      KONG_PORT: $KONG_PORT
      API_REGISTRY_PORT: $API_REGISTRY_PORT
      GATEWAY_CALLBACK: $GATEWAY_CALLBACK
    depends_on:
      - apigw

  redis:
    image: ocbesbn/redis:latest
    ports:
      - "$REDIS_PORT:$REDIS_PORT"
    environment:
      REDIS_AUTH: $REDIS_AUTH
    depends_on:
      - registrator


  #ELK stack
#  elasticsearch:
#    image: ocbesbn/elasticsearch:latest
#    environment:
#      # This helps ES out with memory usage
#      - ES_JAVA_OPTS=-Xmx1g -Xms1g
#    depends_on:
#      - registrator
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#
#  logstash:
#    image: ocbesbn/logstash:latest
#    depends_on:
#      - registrator
#    ports:
#      - "5000:5000/udp"
#      - "12201:12201/udp"
#    environment:
#      ELASTICSEARCH_IP: $HOST
#
#  kibana:
#    image: ocbesbn/kibana:latest
#    depends_on:
#      - registrator
#    ports:
#      - "5601:5601"
#    environment:
#      ELASTICSEARCH_IP: $HOST
  #ELK stack

  mysql:
    image: gr4per/mysql
    depends_on:
     - registrator
    ports:
     - "3306:3306"

  registrator:
    image: gliderlabs/registrator:latest
    network_mode: host
    #restart: always
    depends_on:
     - consul
    volumes:
     - /var/run/docker.sock:/tmp/docker.sock
    command: ['-ip=${HOST}', 'consul://localhost:8500']

  consul:
    command: -bootstrap -ui
    image: gliderlabs/consul-server
    labels:
     - 'SERVICE_NAME=consul'
    ports:
     - "8400:8400"
     - "8500:8500"
     - "53:8600/udp"
     - "53:8600"
